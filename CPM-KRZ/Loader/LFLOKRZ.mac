	TITLE	3.5.1986 Lade-ROM fuer Floppy 5" an AMF 5120 (200k-Disketten)
	.z80

ladadr	equ	0c000h		; Ladeadresse
ladlen	equ	4000h
reclen	equ	1024		; phys. Sektorlaenge
startad	equ	0c885h		; Startadresse fuer das geladenen System
arbber	equ	8000h		; Arbeitsbereich fuer den Urlader
secanz	equ	5		; Anzahl der phys. Sektoren pro Spur

	.phase	0

start::	ld	sp,spber
	ld	a,0cfh		; Speicherumschaltung Version 2.0
	out	(87h),a		; initialisieren
	ld	a,67h
	out	(85h),a
	ld	a,80h
	out	(87h),a
	xor	a
I000E::	LD	(dev),A
	CALL	gettr0		; ist das Geraet lesebereit?
	OR	A
	JR	Z,I001D		; -> ja
I0017::	LD	A,(dev)		; naechstes Geraet
	INC	A
	JR	I000E

; nach ladadr laden von Spur 0/1
;
I001D::
	ld	iy,ladadr	; Ladeadresse
	ld	de,1		; Nr. des ersten zu ladenden Sektors
	ld	b,ladlen/reclen	; Anzahl der zu ladenden Sektoren

; 1.-n. Datensatz lesen
;
I0052::	PUSH	DE
	PUSH	BC
	CALL	lesueb
	JR	NZ,I0017	; -> naechstes Geraet abfragen
	ADD	IY,BC
	POP	BC
	POP	DE
	INC	DE
	djnz	I0052

; es ist alles geladen
;
I0074::	CALL	allaus
	ld	hl,ladadr	; pruefen, ob ein System geladen wurde
	ld	de,kontr
	ld	b,konlen
I0075::	ld	a,(de)
	cp	(hl)
	jr	nz,I0017
	inc	hl
	inc	de
	djnz	I0075
	jp	startad		; geladenes Programm starten
kontr::	defb	0,'@SYS'
konlen	equ	$-kontr
;-----------------------

; Lesen und uebertragen
;   IY - Adresse auf die zu lesen ist
;   DE - abs. Sektornr., des Sektors der zu lesen ist
;
lesueb::PUSH	IY
	LD	A,(dev)
	CALL	lesen
	POP	DE		; aus Lesepuffer auf Zieladresse uebertragen
	PUSH	BC
	LDIR
	POP	BC
	OR	A
	RET
;-----------------------

; alles ausschalten
;
allaus::LD	HL,pdaus

; Ausgabe einer Port/Daten-Liste
;   HL zeigt auf Liste: Port,Datum,Port,Datum,...,0
;
outtab::LD	A,(HL)
	AND	A
	RET	Z
	LD	C,A
	INC	HL
	LD	A,(HL)
	OUT	(C),A
	INC	HL
	JR	outtab

; CRC-Berechnung
;
bercrc::ex	af,af'
	LD	A,0e5h		; CRC-Anfangswert
	LD	C,09ah
	PUSH	DE
	ex	af,af'
I00E2::	ex	af,af'
I00E3::	LD	E,A
	INC	HL
	RLCA
	RLCA
	RLCA
	RLCA
	AND	0FH
	XOR	E
	LD	E,A
	RRCA
	RRCA
	RRCA
	LD	D,A
	AND	0E0H
	XOR	(HL)
	XOR	E
	LD	E,A
	LD	A,D
	AND	1FH
	XOR	C
	LD	C,A
	LD	A,D
	RRCA
	AND	0F0H
	XOR	C
	LD	C,E
	DJNZ	I00E3
	ex	af,af'
	dec	a
	ld	b,80h
	jr	nz,I00E2
	ex	af,af'
	OR	C
	POP	DE
	RET
;-----------------------

; Lesen eines mit Sektors von soltrk,solsec
;   in DE absolute Sektornr.
;
lesen::	PUSH	DE
	call	setix
	POP	HL

	XOR	A		; aus abs. Sektornr. Spur/Sektor machen
	LD	D,A
	LD	E,secanz	; Anzahl der Sektoren pro Spur
	DEC	HL
	LD	B,0FFH
I013A::	INC	B
	SBC	HL,DE
	JR	NC,I013A
	ADD	HL,DE
	INC	L
	LD	H,B
	LD	(solsec),HL

; Laufwerksbereitschaft 5"Floppy ermitteln
;   bei Rueckkehr: z - ready; nz - not ready
;
ready5::LD	DE,0
	LD	A,0BFH		; Kopf laden
	OUT	(10H),A
I0225::	IN	A,(12H)
	BIT	0,A
	jr	z,I0226
	DEC	DE
	LD	A,D
	OR	E
	JR	NZ,I0225
	JP	I02C2		; -> nein, nicht bereit

I0226::	CALL	spursu
	CALL	les2id

I015C::	PUSH	AF
	LD	HL,pdaus0	; AMF abschalten, Motor laufen lassen
	CALL	outtab
	POP	AF
	LD	HL,datpuf+1
	LD	BC,reclen
	RET
;-----------------------

; Geraet auf Spur 0 fahren
;  in A: LW-Nr.
;
gettr0::LD	HL,pdinit	; AMF initialisieren
	PUSH	AF
	CALL	outtab
	POP	AF
	CALL	setix
	LD	A,0
	LD	(isttrk),A
	LD	B,2
	CALL	steps
	LD	B,80
	CALL	trk0
	JP	NZ,I02C2	; -> Spur 0 nicht gefunden
	LD	A,0		; Geraet ist bereit zum lesen
	JR	I015C
;-----------------------

; Floppy selektieren und AMF freischiessen
;
setix::	ld	hl,seltab
	and	3
	ld	e,a
	ld	d,0
	add	hl,de
	LD	A,0FFH
	OUT	(10H),A
	LD	A,0
	OUT	(14H),A
	IN	A,(16H)
	LD	A,(HL)
	OUT	(18H),A		; select Floppy
	ret
;-----------------------

steps::	CALL	stepin
	DJNZ	steps
	RET
;-----------------------

trk0::	LD	c,12H
	IN	A,(C)
	AND	80h
	RET	Z
	LD	HL,D038F
	CALL	stepou
	DJNZ	trk0
	INC	B
	RET
;-----------------------

stepin::LD	HL,D0388
stepou::CALL	outtab
	LD	DE,600h

wait::	DEC	DE
	LD	A,D
	OR	E
	JR	NZ,wait
	RET
;-----------------------

spursu::LD	A,(isttrk)
	LD	B,A
	LD	A,(soltrk)
	SUB	B
	JR	Z,I0241
	LD	B,A
	CALL	steps

I0241::	LD	A,(soltrk)
	LD	(isttrk),A

	LD	C,10H		; Kopf laden
	ld	a,0bfh
	OUT	(C),A
	LD	DE,1000H
	JP	wait

;-----------------------

; Lesen eines Sektor-ID und eines Daten-ID nach sidpuf und datpuf
;
les2id::LD	E,0FFH
I0264::	LD	C,16H		; Datenport Eingabe
	LD	D,27		; Gaplaenge
	LD	HL,sidpuf
	LD	B,7
	ld	a,1		; 1x7 byte lesen
	PUSH	DE
	LD	DE,900H
	CALL	mrksu		; ID lesen
	POP	DE
	CP	0FEH		; Sektor-ID?
	JR	NZ,I02BB	; -> nein

	LD	B,D
I027D::	IN	A,(C)		; gap ueberlesen
	NOP
	NOP
	DJNZ	I027D

	LD	HL,datpuf
	LD	B,83H
	ld	a,reclen/128	; x*80h byte
	PUSH	DE
	LD	DE,250H
	CALL	mrksu		; ID lesen
	POP	DE
	CALL	setber

	LD	HL,sidpuf-1	; Sektor-ID-CRC richtig?
	LD	B,7
	ld	a,1		; 1x80h
	CALL	bercrc
	JR	NZ,I02BE	; -> nein, weiter versuchen

	LD	A,(sidpuf+1)	; richtige Spurnr.?
	LD	HL,soltrk
	CP	(HL)
	JR	NZ,I02C2	; -> nein, abbrechen

	LD	A,(sidpuf+3)	; richtige Sektornr.?
	DEC	HL
	CP	(HL)
	JR	NZ,I02BE	; -> nein, weiter versuchen

	LD	HL,datpuf-1	; Daten-ID-CRC richtig?
	LD	B,83H
	ld	a,reclen/128	; x*80h
	CALL	bercrc
	JR	NZ,I02BE	; -> nein, weiter versuchen

	xor	a		; alles ok.
	ret

I02BB::	CALL	setber
I02BE::	DEC	E
	JR	NZ,I0264

I02C2::	CALL	allaus
	LD	A,0FFH
	JP	I015C
;-----------------------

; Floppy ruecksetzen (bereit machen)
;
setber::LD	A,0A5H
	OUT	(10H),A
	LD	A,0BBH
	OUT	(10H),A
	IN	A,(16H)
	RET
;-----------------------

; Marke suchen (FE/FB bei Floppy, AA bei Kassette) und Daten dahinter lesen
;   in  DE - timeout-Zeit beim Markensuchen
;       HL - Pufferadresse
;   out A  - Marke
;
mrksu::	ex	af,af'
	LD	(HL),0
	CALL	setber
I0314::	LD	A,85H		; Markenerkennung ein
	OUT	(10H),A
I0318::	DEC	D		; auf Marke warten
	JR	Z,I0312		; -> time out; es kam keine
I031B::	DEC	E
	JR	Z,I0318
	IN	A,(12H)
	AND	2
	JR	NZ,I031B
	IN	A,(C)
	LD	D,0
	CP	0A1H
	JR	NZ,I0312	; -> es kam falsche Marke
	IN	A,(C)
	CP	0A1H
	JR	NZ,I0312	; -> es kam nach A1 nicht weiteres A1
	IN	A,(C)
	CP	0A1H
	JR	NZ,I0312	; -> es kam nicht das 3. A1

I0309::	IN	D,(C)		; FE/FB lesen
	LD	(HL),D
	INC	HL
	ini
	ex	af,af'
I030D::	nop
I030E::	INI			; Datensatz einlesen
	JR	NZ,I030D
	ld	b,80h
	ini
	dec	a
	jr	nz,I030E
I0312::	LD	A,D
	RET

;-----------------------

; Befehle fuer Schrittausfuehrung
;
D0388::	defb	10H,0bfh
	defb	10H,03fh
	defb	10H,0bfh
	defb	0

D038F::	defb	10H,9fh
	defb	10H,1fh
	defb	10H,9fh
	defb	0

seltab::defb	0edh,0ddh,0bdh,7dh	; Floppy

pdinit::defb	15H,0FH		 ; AMF initialisieren
	defb	17H,4FH
	defb	11H,0FH
	defb	10H,0FFH
	defb	13H,0CFH
	defb	13H,0F7H
	defb	12H,0F7H
	defb	18H,0FFH
	defb	16H,0FFH
	defb	14H,0
	defb	87h,0cfh	; Speicherumschaltung initialisieren
	defb	85h,67h
	defb	87h,80h
	defb	0

pdaus::	defb	18H,0FFH	; alles ausschalten
pdaus0::defb	10H,0FFH
	defb	12H,0FFH
	defb	0


	.dephase

; RAM-Teil des Urladers
; =====================
;
	.phase	arbber

; Stackbereich
;
	defs	100h,0ffh
spber::	defs	0

; Arbeitsbereiche
;
dev::	defb	0	; 0,3-Kassette; 1-5"Floppy; 2-8"Floppy
solsec::defb	0	; Soll-Spurnr.
soltrk::defb	0	; Soll-Sektornr.
isttrk::defb	0
;
sidpuf::defs	8,0	; Bereich fuer zu lesendes Sektor-ID
;
datpuf::defs	reclen+3,0 ; Bereich fuer zu lesendes Daten-ID

	.dephase

	END
